/*******************************************************************************
 * Copyright 2020-2021 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id "org.owasp.dependencycheck" version "8.1.2"
}

ext {
    dockerImageVersion = release_version
    ktorVersion = "1.6.8"
}

group 'com.exactpro.th2'
version release_version

ext.excludeSailfish = { rcd ->
    rcd.excludeModule("com.exactpro.sf", "sailfish-core")
    rcd.excludeModule("com.exactpro.sf", "sailfish-common")
    rcd.excludeModule("com.exactpro.sf", "sailfish-rest-api-client")
    rcd.excludeModule("com.exactpro.sf", "service-http")
}

repositories {

    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        content {
            excludeSailfish(it)
        }
    }
    // ignoreGradleMetadataRedirection is used for sonatype because
    // Sailfish dependencies have constrains that interfere with our BOM
    // so we exclude Gradle metadata for this repositories.
    // We've checked these versions - they are compatible and safe to use
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        content {
            excludeSailfish(it)
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral()
    jcenter()
    mavenLocal()
}

configurations.implementation {
    exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-yaml' // because of the vulnerability
    exclude group: 'junit', module: 'junit' // because of the vulnerability
}

dependencies {
    api platform('com.exactpro.th2:bom:4.2.0')
    implementation 'org.slf4j:slf4j-api'

    implementation 'com.exactpro.th2:grpc-common:3.13.0'
    implementation 'com.exactpro.th2:common:3.44.1'
    implementation "com.exactpro.th2:grpc-act-template:3.12.0"

    implementation "com.google.protobuf:protobuf-java-util"
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-stub"
    implementation "io.grpc:grpc-core"
    implementation "io.grpc:grpc-netty"

    implementation 'io.github.microutils:kotlin-logging:3.0.0'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation "io.ktor:ktor-jackson:${ktorVersion}"
    implementation "io.ktor:ktor-server-netty:${ktorVersion}"
    implementation "io.ktor:ktor-client-core:${ktorVersion}"
    implementation "io.ktor:ktor-client-cio:${ktorVersion}"

    implementation('com.exactpro.sf:sailfish-core:3.3.54')

    implementation 'org.ehcache:ehcache:3.8.1'

    implementation 'com.rabbitmq:amqp-client'

    implementation group: 'com.github.os72', name: 'protoc-jar-maven-plugin', version: '3.11.4'
    implementation 'org.codehaus.plexus:plexus-utils:3.0.24'

    testImplementation "io.mockk:mockk:1.9.3"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

application {
    mainClassName = "com.exactpro.th2.actuibackend.MainKt"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

dependencyCheck {
    formats=['SARIF', 'JSON', 'HTML']
    failBuildOnCVSS=5

    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}